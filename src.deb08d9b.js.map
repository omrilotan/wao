{"version":3,"sources":["parseSet.ts","index.ts"],"names":[],"mappings":"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","file":"src.deb08d9b.js","sourceRoot":"../src","sourcesContent":["export function parseSet(text: string): {\n\tmetadata: Record<string, string>;\n\tqNa: Record<\"question\" | \"answer\", string>[];\n} {\n\tconst lines = text\n\t\t.split(\"\\n\")\n\t\t.map((line) => line.trim())\n\t\t.filter(Boolean);\n\tconst headerIndex = lines.findIndex((line) => line.startsWith(\"---\"));\n\tconst header = lines.slice(0, headerIndex);\n\tconst body = lines.slice(headerIndex + 1);\n\tconst metadata: Record<string, string> = header.reduce((acc, line) => {\n\t\tconst [key, value] = line.split(\":\").map((part) => part.trim());\n\t\tacc[key.toLowerCase()] = value;\n\t\treturn acc;\n\t}, {});\n\tconst qNa = body\n\t\t.map((line) => {\n\t\t\tconst [question, answer] = line.split(\"|\").map((part) => part.trim());\n\t\t\treturn { question, answer };\n\t\t})\n\t\t.sort(() => Math.random() - 0.5);\n\treturn { metadata, qNa };\n}\n","import { parseSet } from \"./parseSet.ts\";\n\nfetch(\"./generated/sets.json\").then(async (response) => {\n\tif (!response.ok) return;\n\tconst sets = await response.json();\n\tconst fragment = document.createDocumentFragment();\n\tsets.forEach(({ value, text }) => {\n\t\tconst option = document.createElement(\"option\");\n\t\toption.value = value;\n\t\toption.appendChild(document.createTextNode(text));\n\t\tif (sets.length === 1) option.selected = true;\n\t\tif (sets.length === 1) option.disabled = true;\n\t\tfragment.appendChild(option);\n\t});\n\n\tempty(\"select\").appendChild(fragment);\n});\n\ndocument.querySelector(\"button\").addEventListener(\n\t\"click\",\n\tasync function start(event: Event) {\n\t\tconst qNa: Record<\"question\" | \"answer\", string>[] = [];\n\t\tconst button = document.querySelector(\"button\");\n\t\tconst set =\n\t\t\t(document.querySelector(\"#set\") as HTMLSelectElement)?.value ??\n\t\t\t\"albmyx569bmpyy8wqyed08af4mjrltzd\";\n\t\tconst response = await fetch(`./sets/${set}.txt`);\n\t\tif (!response.ok) throw new Error(\"Failed to fetch set. Please reload.\");\n\t\tconst text = await response.text();\n\t\tqNa.push(...parseSet(text).qNa);\n\t\tbutton.addEventListener(\"click\", displayNextQuestion, { once: false });\n\t\tdisplayNextQuestion();\n\t\tbutton.textContent = \"Next\";\n\n\t\tfunction displayNextQuestion() {\n\t\t\tif (qNa.length > 0) return displayQNA(qNa.shift(), qNa.length);\n\t\t\tdisplayOutOfQuestions();\n\t\t}\n\n\t\tfunction displayQNA(\n\t\t\t{\n\t\t\t\tquestion,\n\t\t\t\tanswer,\n\t\t\t}: {\n\t\t\t\tquestion: string;\n\t\t\t\tanswer: string;\n\t\t\t},\n\t\t\tremaining: number,\n\t\t): void {\n\t\t\tconst fragment = document.createDocumentFragment();\n\t\t\tconst questionElement = document.createElement(\"h1\");\n\t\t\tquestionElement.appendChild(document.createTextNode(question));\n\t\t\tconst answerElement = document.createElement(\"p\");\n\t\t\tanswerElement.appendChild(document.createTextNode(answer));\n\t\t\tconst remainingElement = document.createElement(\"p\");\n\t\t\tremainingElement.classList.add(\"small\");\n\t\t\tremainingElement.classList.add(\"center\");\n\t\t\tremainingElement.appendChild(\n\t\t\t\tdocument.createTextNode(`Remaining: ${remaining}`),\n\t\t\t);\n\t\t\tfragment.appendChild(questionElement);\n\t\t\tfragment.appendChild(answerElement);\n\t\t\tfragment.appendChild(remainingElement);\n\t\t\tempty(\"main\").appendChild(fragment);\n\t\t}\n\n\t\tfunction displayOutOfQuestions(): void {\n\t\t\tconst fragment = document.createDocumentFragment();\n\t\t\tconst title = document.createElement(\"h1\");\n\t\t\ttitle.appendChild(document.createTextNode(\"Out of questions\"));\n\t\t\tconst paragraph = document.createElement(\"p\");\n\t\t\tparagraph.appendChild(\n\t\t\t\tdocument.createTextNode(\n\t\t\t\t\t\"You have answered all questions. Make up some questions of your own, or \",\n\t\t\t\t),\n\t\t\t);\n\t\t\tconst link = document.createElement(\"a\");\n\t\t\tlink.href = \"https://github.com/omrilotan/wao/issues/new\";\n\t\t\tlink.appendChild(document.createTextNode(\"suggest more questions\"));\n\t\t\tparagraph.appendChild(link);\n\t\t\tfragment.appendChild(title);\n\t\t\tfragment.appendChild(paragraph);\n\t\t\tempty(\"main\").appendChild(fragment);\n\n\t\t\tbutton.removeEventListener(\"click\", displayNextQuestion);\n\t\t\tbutton.addEventListener(\n\t\t\t\t\"click\",\n\t\t\t\t() => {\n\t\t\t\t\tlocation.reload();\n\t\t\t\t},\n\t\t\t\t{ once: true },\n\t\t\t);\n\t\t\tbutton.textContent = \"Restart\";\n\t\t}\n\n\t\treturn undefined;\n\t},\n\t{ once: true },\n);\n\nfunction empty(selector: string): Element {\n\tconst element = document.querySelector(selector);\n\twhile (element.firstChild) element.removeChild(element.firstChild);\n\treturn element;\n}\n"]}